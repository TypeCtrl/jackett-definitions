version: 2.1
jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test:ci
      - run:
          name: lint
          command: npm run lint
  release:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm run build
      - run: npm run semantic-release
  update_upstream:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: git submodule foreach git pull origin master
      - run: npm run update
      - run:
          name: "git config"
          command: |
            git config credential.helper "cache --timeout=120"
            git config user.email "scttcper@gmail.com"
            git config user.name "scttcper"
            ssh-add -D
      - run: git add .
      - run: "git commit -a -m 'fix: update from upstream'"
      - run: git push
      - run: git push -q https://${GH_TOKEN}@github.com/TypeCtrl/tracker-definitions.git master

workflows:
  version: 2
  test_and_release:
    # Run the test jobs first, then the release only when all the test jobs are successful
    jobs:
      - test
      - release:
          requires:
            - test
  nightly:
    triggers:
      - schedule:
          cron: "12 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update_upstream


