import { TopLevel } from '../definition-interface';
export const definition: TopLevel = {
  site: 'torrentsectorcrew',
  name: 'Torrent Sector Crew',
  description: 'A German general tracker',
  language: 'de-DE',
  links: ['https://tsctracker.net/'],
  caps: {
    categorymappings: [
      { id: '4', cat: 'PC/Games' },
      { id: '5', cat: 'Movies/3D' },
      { id: '6', cat: 'Audio' },
      { id: '9', cat: 'Other' },
      { id: '19', cat: 'Movies/SD' },
      { id: '20', cat: 'Movies/DVD' },
      { id: '22', cat: 'PC/0day' },
      { id: '24', cat: 'Audio/Audiobook' },
      { id: '28', cat: 'Books' },
      { id: '29', cat: 'Audio/Video' },
      { id: '36', cat: 'Movies/HD' },
      { id: '37', cat: 'Console/NDS' },
      { id: '38', cat: 'Audio/Audiobook' },
      { id: '42', cat: 'TV/Sport' },
      { id: '43', cat: 'Movies/BluRay' },
      { id: '48', cat: 'PC/Mac' },
      { id: '50', cat: 'Console/Xbox' },
      { id: '54', cat: 'Movies/HD' },
      { id: '55', cat: 'Movies/HD' },
      { id: '58', cat: 'Console/PS4' },
      { id: '64', cat: 'XXX' },
      { id: '65', cat: 'PC/Phone-Android' },
      { id: '66', cat: 'TV/SD' },
      { id: '68', cat: 'TV' },
      { id: '69', cat: 'TV/HD' },
      { id: '72', cat: 'TV/Foreign' },
      { id: '75', cat: 'TV/Documentary' },
      { id: '76', cat: 'TV/Documentary' },
      { id: '77', cat: 'TV/Documentary' },
      { id: '78', cat: 'TV/Documentary' },
      { id: '82', cat: 'Audio' },
      { id: '83', cat: 'PC/Phone-IOS' },
      { id: '103', cat: 'Other' },
      { id: '104', cat: 'Audio' },
      { id: '107', cat: 'PC/0day' },
      { id: '108', cat: 'TV' },
      { id: '109', cat: 'PC' },
      { id: '111', cat: 'Movies' },
      { id: '112', cat: 'TV/Anime' },
      { id: '113', cat: 'TV/Documentary' },
      { id: '114', cat: 'TV/Documentary' },
      { id: '115', cat: 'PC/Mac' },
      { id: '116', cat: 'Other' },
      { id: '117', cat: 'Other' },
      { id: '119', cat: 'Movies' },
      { id: '120', cat: 'Movies/Foreign' },
      { id: '121', cat: 'Movies/HD' },
    ],
  },
  settings: [
    { name: 'pin', type: 'text', label: 'Pin' },
    { name: 'username', type: 'text', label: 'Username' },
    { name: 'password', type: 'password', label: 'Password' },
  ],
  login: {
    path: 'landing.php',
    method: 'form',
    form: 'form',
    inputs: {
      username: '{{ .Config.username }}',
      password: '{{ .Config.password }}',
      pin: '{{ .Config.pin }}',
    },
    error: [{ selector: '#login_box_desc' }],
    test: { path: 'my.php' },
  },
  ratio: {
    path: '/my.php',
    selector: 'td.navi_top:contains("Deine Ratio:")',
    filters: [
      { name: 'replace', args: ['Deine Ratio: ', ''] },
      { name: 'replace', args: ['.', ''] },
      { name: 'replace', args: [',', '.'] },
    ],
  },
  search: {
    path: 'browse.php',
    inputs: {
      $raw: '{{range .Categories}}c{{.}}=1&{{end}}',
      search: '{{ .Query.Keywords }}',
      incldead: '1',
      orderby: 'added',
      sort: 'desc',
    },
    rows: {
      selector:
        'h2 +p + br + table.tablebrowse > tbody > tr[style="height: 45px;"], tr:contains("Weiter") > td > table.tablebrowse > tbody > tr[style="height: 45px;"]',
    },
    fields: {
      title: {
        selector: 'a[title][href^="details.php"]',
        attribute: 'title',
      },
      category: {
        selector: 'a[href*="cat="]',
        attribute: 'href',
        filters: [{ name: 'querystring', args: 'cat' }],
      },
      comments: { selector: 'a[href*="&tocomm="]', attribute: 'href' },
      download: {
        selector: 'a[href^="download_ssl.php"]',
        attribute: 'href',
      },
      files: { selector: 'td:nth-child(3)' },
      grabs: {
        selector: 'td:nth-child(9)',
        filters: [{ name: 'replace', args: ['-mal', ''] }],
      },
      size: {
        selector: 'td:nth-child(6)',
        filters: [
          { name: 'replace', args: ['.', ''] },
          { name: 'replace', args: [',', '.'] },
        ],
      },
      seeders: {
        selector: 'td:nth-child(7)',
        filters: [{ name: 'regexp', args: '(\\d+)' }],
      },
      leechers: {
        selector: 'td:nth-child(8)',
        filters: [{ name: 'regexp', args: '(\\d+)' }],
      },
      date: {
        selector: 'td:nth-child(5)',
        remove: 'br',
        filters: [{ name: 'dateparse', args: '02.01.200615:04:05' }],
      },
      downloadvolumefactor: {
        case: {
          'font:contains("[OnlyUpload]")': '0',
          'font:contains("[-40 Download]")': '0.6',
          '*': '1',
        },
      },
      uploadvolumefactor: { case: { '*': '1' } },
    },
  },
  encoding: 'UTF-8',
};
